---
- name: Instala la base para los equipos de los laboratorios de Greencore Solutions
  hosts: all
  tasks:
  - name: Cambia cr.archive por ubuntu-mirror
    replace: >
      regexp="deb http:\/\/cr.archive.ubuntu.com"
      replace="deb http://ubuntu-mirror.greencore.int"
      dest=/etc/apt/sources.list
    become: yes
  - name: Elimina lineas que referencien a backports
    lineinfile: >
      regexp="-backports"
      dest=/etc/apt/sources.list
      state=absent
    become: yes
  - name: Instala aptitude (requerido por ansible)
    apt:
      name: aptitude
      state: latest
      update_cache: yes
    become: yes
  - name: Actualiza cache, paquetes, y autoremueve
    apt:
      upgrade: dist
      update_cache: yes
      autoremove: yes
    become: yes
  - name: Remueve paqute deja-dup
    apt:
      name: deja-dup
      state: absent
    become: yes
  - name: Instala paquetes requeridos por los instructores
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - vim
      - virt-manager
      - virtualbox
      - fritzing
      - bridge-utils
      - qemu-kvm
      - qemu-system
      - libvirt-bin
      - ubuntu-vm-builder
      - pwgen
      - gnome-shell
      - gnome-tweak-tool
      - chromium-browser
      - screen
      - byobu
      - openssh-server
      - dia
      - shutter
  - name: Deshabilita biosdevname
    lineinfile:
      regexp: '^GRUB_CMDLINE_LINUX=""'
      dest: "/etc/default/grub"
      line: 'GRUB_CMDLINE_LINUX="net.ifnames=0 biosdevname=0"'
      state: present
      backrefs: yes
    become: yes
    register: grub_default_biosdevname
  - name: Actualiza grub luego de deshabilitar biosdevname
    #command: update-grub
    command: grub-mkconfig -o /boot/grub/grub.cfg
    ignore_errors: true
    become: yes
    when: grub_default_biosdevname.changed
  - name: Configura Chromium Browser en modo Incognito
    lineinfile:
      regexp: '^CHROMIUM_FLAGS=""'
      dest: "/etc/chromium-browser/default"
      line: 'CHROMIUM_FLAGS="-incognito"'
      state: present
      backrefs: yes
    become: yes
  - name: Interfaces con bridge br0
    copy:
      dest: /etc/network/interfaces
      src: files/interfaces-bridge
      mode: 0644
      owner: root
      group: root
    become: yes
  - name: Instala tarea programada para apagado automático de equipos
    copy:
      dest: /etc/cron.d/shutdown
      src: files/cron-shutdown
      mode: 0644
      owner: root
      group: root
    become: yes
# TODO
### Obtener dirección IP y nombre de host por parte del servidor de DHCP (FOG)
##echo unset old_host_name > /etc/dhcp/dhclient-enter-hooks.d/unset_old_hostname
##> /etc/hostname
##cat >> /usr/local/bin/turn-on.sh << EOF
###!/bin/bash
##
##ans=$(zenity --width=330 --height=300 --list  --text "¿Cuales equipos desea activar?" --checklist  --column "Seleccione" --column "Equipo" \
##	FALSE "Estacion #01 (6c:0b:84:09:ff:9e)" \
##	FALSE "Estacion #02 (6c:0b:84:09:ff:5c)" \
##	FALSE "Estacion #03 (6c:0b:84:09:fb:f5)" \
##	FALSE "Estacion #04 (6c:0b:84:0a:03:a6)" \
##	FALSE "Estacion #05 (6c:0b:84:09:ff:dd)" \
##	FALSE "Estacion #06 (6c:0b:84:09:ff:76)" \
##	FALSE "Estacion #07 (6c:0b:84:09:ff:4e)" \
##	FALSE "Estacion #08 (6c:0b:84:08:f2:56)" \
##	 --separator=";" 2>/dev/null)
##
##cant=$(echo $ans | gawk -F\; '{print NF}')
##
##
##for estacion in $(seq $cant)
##do
##	echo $ans | gawk -v estacion=$estacion -F\; '{print "wakeonlan",substr($estacion,15,17)}' |bash
##done
##EOF
##
### Permisos de ejecución para el script
##/bin/chmod +x /usr/local/bin/turn-on.sh
